1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
Answer：函数参数放在a0~a7，在这里，13这个参数被放在a2中。

2. Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
Answer：没有函数调用的代码，在编译后函数直接內联到了相应地方。

3. At what address is the function printf located?
Answer：printf的地址是0x630。

4. What value is in the register ra just after the jalr to printf in main?
Answer：ra的值为0x38。

5. Run the following code.
unsigned int i = 0x00646c72;
    printf("H%x Wo%s", 57616, &i);
What is the output? Here's an ASCII table that maps bytes to characters.The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value? Here's a description of little- and big-endian and a more whimsical description.
Answer：输出是He110 World。如果是大端存储的话，57616不变，i改为0x726c6400即可。

6. In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
printf("x=%d y=%d", 3);
Answer：y=后面输出的值取决于当前a2寄存器的内容。因为3存放在a1寄存器，输出的第二个值应当放在a2寄存器，但是这里没有第二个参数，所以就取决于当前a2寄存器的值了。
